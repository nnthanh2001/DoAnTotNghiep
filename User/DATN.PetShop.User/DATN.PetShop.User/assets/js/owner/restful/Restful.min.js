/**
 * Initialize constant with an array of strings.
 * Loop through each item in the array and print
 * it to the console.
 * 
 * Example
 * 
 * var request= new window.Restful();
 * var SignInHandlerUrl="handleRequest/Authentication/signIn/signIn.aspx";
 * var username="thanh";
 * var pass="123456";
 * var doc='{"UserName":username,"Password":pass}';
 * var json=JSON.stringify(doc);    
 * var data = { "request": "SignupForm" ,"data":json};
   var option = { url: SignInHandlerUrl, data: data, callback: result };
   request.constructor(option);

   request.get();
   request.post();
   request.put();
   request.delete();

function result(json);
 */
/// <var>The restful request</var>
; var Restful = function (options) {
    /// <summary>
    /// Request
    /// </summary>
    /// <param name="options">The options.</param>
    var root = this;
    var vars = { url: "", data: "", callback: "", domain: "", datatype: "json", isCache: false };
    var method = "GET";
    root.constructor = function (options) {
        $.extend(vars, options);
    };
    root.constructor(options);
    root.get = function () {
        const type = method = "GET";
        this.ajax(type);
    };
    root.post = function () {
        const type = method = "POST";
        this.ajax(type);
    };
    root.put = function () {
        const type = "PUT";
        method = "POST";
        this.ajax(type);
    };
    root.delete = function () {
        const type = "DELETE";
        method = "POST";
        this.ajax(type);
    };
    root.ajax = function (type) {
        const url = vars.url;
        const data = vars.data;
        data["type"] = type;
        //if (typeof data != 'string') {
        //    data = JSON.stringify(data);
        //}
        const isCache = vars.isCache || false;
        const callback = vars.callback;
        //var domnain_api = vars.domain != "" ? vars.domain : "";
        const url_api = vars.domain + url;
        const datatype = vars.datatype != "" ? vars.datatype : "json";

        var json = "";
        //var cache = jscache('db/sites');
        //if (isCache) {
        //    
        //    var cacheValue = cache.get(url_api);
        //    var json = cacheValue != null && cacheValue != "" ? cacheValue : "";
        //}
        if (json === "") {
            $.ajax({
                url: url_api,
                type: method, //or POST
                data: data, //if the type is Post
                dataType: datatype //JSON or HTML,XML,TXT,jsonp
                , crossDomain: true
                , xhrFields: {
                    withCredentials: true
                }
                ,
                //xhr: function () {
                //    var xhr = new window.XMLHttpRequest();
                //    // Upload progress
                //    xhr.upload.addEventListener("progress", function (evt) {
                //        if (evt.lengthComputable) {
                //            var percentComplete = evt.loaded / evt.total;
                //            //Do something with upload progress
                //            console.log(percentComplete);
                //        }
                //    }, false);
                //    // Download progress
                //    xhr.addEventListener("progress", function (evt) {
                //        if (evt.lengthComputable) {
                //            var percentComplete = evt.loaded / evt.total;
                //            // Do something with download progress
                //            console.log(percentComplete);
                //        }
                //    }, false);

                //    return xhr;
                //},
                beforeSend: function () {
                },
                success: function (result) {
                    //loading.Hide();
                    if (result != "") {
                        if (datatype !== 'html') {
                            if (result.HttpStatusCode === 200) {
                                json = result;
                                if (isCache) {
                                    cache.set(url_api, json);
                                }
                            } else {
                                alert(result.Message);
                            }
                        } else {
                            json = result;
                            if (json !== "") {
                                //cache.set(url_api, json);
                            }
                        }
                        if (callback !== "") {
                            callback(json);
                        }
                    }
                },
                error: function (error) {
                }
            });
        } else {
            if (callback !== "") {
                callback(json);
            }
        }
    };
};